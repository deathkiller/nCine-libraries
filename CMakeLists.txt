cmake_minimum_required(VERSION 2.8.12)

project(nCine-libraries)

set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})
get_filename_component(PARENT_SOURCE_DIR ${CMAKE_SOURCE_DIR} DIRECTORY)
set(DESTINATION_PATH ${PARENT_SOURCE_DIR}/nCine-external CACHE STRING "Set the destination directory where files will be copied")
set(EP_BASE "${CMAKE_BINARY_DIR}/ExternalProjects")
set_property(DIRECTORY PROPERTY "EP_BASE" ${EP_BASE})

set(CMAKE_BUILD_TYPE Release)
set(CMAKE_CONFIGURATION_TYPES Release)

if(MSVC)
	if(CMAKE_CL_64)
		set(PLATFORM x64)
		set(BINDIR "${DESTINATION_PATH}/bin/x64")
		set(LIBDIR "${DESTINATION_PATH}/lib/x64")

	else()
		set(PLATFORM Win32)
		set(BINDIR "${DESTINATION_PATH}/bin/x86")
		set(LIBDIR "${DESTINATION_PATH}/lib/x86")
	endif()
	set(INCDIR "${DESTINATION_PATH}/include")

	file(MAKE_DIRECTORY ${BINDIR})
	file(MAKE_DIRECTORY ${LIBDIR})
	file(MAKE_DIRECTORY ${INCDIR})

	if(MSVC_IDE)
		set(CONFIGURATION $<CONFIGURATION>)
	else()
		set(CONFIGURATION ${CMAKE_BUILD_TYPE})
	endif()
endif()

include(ExternalProject)
include(ProcessorCount)
ProcessorCount(CPUS)
set(PARALLEL_MAKE make -j${CPUS})

include(webp)
include(webp_static)
include(zlib)
include(png)
include(glew)
include(glfw)
include(glfw_static)
include(sdl2)
include(ogg)
include(vorbis)
include(openal-soft)
